spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/sarop
    username: postgres
    password: 12345
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    security:
      oauth2:
        client:
          registration:
            google:
              client-id: 539866157176-utfp2sc5o8k0f89utp0lg6fdfg34tqsf.apps.googleusercontent.com
              client-secret: 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
              scope:
                - email
                - profile
          provider:
            google:
              user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

application:
  security:
    jwt:
      secret-key: 35448b734e6159c4fdd39ce996ecbcd783548aa5f75ed00d75e29749ff6c3783
      expiration: 86400000 # a day
      token:
        prefix: Bearer
      header:
        string: Authorization
      refresh-token:
        expiration: 604800000 # 7 days
server:
  port: 8082

geoserver:
  url: http://localhost:8080/geoserver/rest
  username: admin
  password: geoserver


